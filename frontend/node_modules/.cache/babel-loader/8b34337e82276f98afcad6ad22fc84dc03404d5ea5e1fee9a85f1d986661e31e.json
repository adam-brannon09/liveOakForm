{"ast":null,"code":"var _jsxFileName = \"/Users/adambrannon/Desktop/liveOakForm/src/components/ContactForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContactForm() {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  // ... other state variables\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the existing file (replace 'URL_TO_YOUR_EXISTING_FILE' with your URL)\n        const response = await fetch('URL_TO_YOUR_EXISTING_FILE');\n        const data = await response.arrayBuffer();\n        const existingWorkbook = XLSX.read(data, {\n          type: 'array'\n        });\n\n        // Access and process the existing workbook as needed\n        // Example: const existingSheet = existingWorkbook.Sheets[existingWorkbook.SheetNames[0]];\n      } catch (error) {\n        console.error('Error fetching existing file:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // ... your existing form submission logic\n\n    // Create new data array based on your form fields\n    const newData = [{\n      'First Name': firstName,\n      'Last Name': lastName\n      // ... include other fields as needed\n    }];\n\n    // Convert new data to a worksheet\n    const newWorksheet = XLSX.utils.json_to_sheet(newData, {\n      header: ['First Name', 'Last Name' /*... other headers */],\n      skipHeader: true\n    });\n    try {\n      // Fetch the existing file again\n      const response = await fetch('URL_TO_YOUR_EXISTING_FILE');\n      const data = await response.arrayBuffer();\n      const existingWorkbook = XLSX.read(data, {\n        type: 'array'\n      });\n\n      // Get the first sheet in the existing workbook\n      const existingSheet = existingWorkbook.Sheets[existingWorkbook.SheetNames[0]];\n\n      // Find the last row in the existing sheet\n      const lastRow = XLSX.utils.sheet_add_json(existingSheet).length + 1;\n\n      // Append new data to the existing sheet\n      XLSX.utils.sheet_add_sheet(existingSheet, newWorksheet, {\n        origin: lastRow\n      });\n\n      // Create a new workbook with the updated data\n      const updatedWorkbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(updatedWorkbook, existingSheet, 'Sheet1');\n\n      // Save the updated workbook back to the same file\n      const updatedData = XLSX.write(updatedWorkbook, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      const blob = new Blob([updatedData], {\n        type: 'application/octet-stream'\n      });\n      saveAs(blob, 'YOUR_EXISTING_FILE.xlsx'); // Replace 'YOUR_EXISTING_FILE.xlsx' with your file name\n    } catch (error) {\n      console.error('Error appending data to the file:', error);\n    }\n    navigate(\"/confirmation\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"lof-blue\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn lof-red text-white border-white rounded-tr-xl rounded-none mb-20 h-16 w-1/4 \",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ContactForm, \"AnZR6NTY5bdIIQ5Fu81mr6izdEY=\", false, function () {\n  return [useNavigate];\n});\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","useEffect","Header","useNavigate","XLSX","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_s","firstName","setFirstName","lastName","setLastName","navigate","fetchData","response","fetch","data","arrayBuffer","existingWorkbook","read","type","error","console","handleSubmit","e","preventDefault","newData","newWorksheet","utils","json_to_sheet","header","skipHeader","existingSheet","Sheets","SheetNames","lastRow","sheet_add_json","length","sheet_add_sheet","origin","updatedWorkbook","book_new","book_append_sheet","updatedData","write","bookType","blob","Blob","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","_c","$RefreshReg$"],"sources":["/Users/adambrannon/Desktop/liveOakForm/src/components/ContactForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\n\nfunction ContactForm() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  // ... other state variables\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the existing file (replace 'URL_TO_YOUR_EXISTING_FILE' with your URL)\n        const response = await fetch('URL_TO_YOUR_EXISTING_FILE');\n        const data = await response.arrayBuffer();\n        const existingWorkbook = XLSX.read(data, { type: 'array' });\n\n        // Access and process the existing workbook as needed\n        // Example: const existingSheet = existingWorkbook.Sheets[existingWorkbook.SheetNames[0]];\n      } catch (error) {\n        console.error('Error fetching existing file:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // ... your existing form submission logic\n\n    // Create new data array based on your form fields\n    const newData = [\n      {\n        'First Name': firstName,\n        'Last Name': lastName,\n        // ... include other fields as needed\n      },\n    ];\n\n    // Convert new data to a worksheet\n    const newWorksheet = XLSX.utils.json_to_sheet(newData, { header: ['First Name', 'Last Name', /*... other headers */], skipHeader: true });\n\n    try {\n      // Fetch the existing file again\n      const response = await fetch('URL_TO_YOUR_EXISTING_FILE');\n      const data = await response.arrayBuffer();\n      const existingWorkbook = XLSX.read(data, { type: 'array' });\n\n      // Get the first sheet in the existing workbook\n      const existingSheet = existingWorkbook.Sheets[existingWorkbook.SheetNames[0]];\n\n      // Find the last row in the existing sheet\n      const lastRow = XLSX.utils.sheet_add_json(existingSheet).length + 1;\n\n      // Append new data to the existing sheet\n      XLSX.utils.sheet_add_sheet(existingSheet, newWorksheet, { origin: lastRow });\n\n      // Create a new workbook with the updated data\n      const updatedWorkbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(updatedWorkbook, existingSheet, 'Sheet1');\n\n      // Save the updated workbook back to the same file\n      const updatedData = XLSX.write(updatedWorkbook, { bookType: 'xlsx', type: 'array' });\n      const blob = new Blob([updatedData], { type: 'application/octet-stream' });\n      saveAs(blob, 'YOUR_EXISTING_FILE.xlsx'); // Replace 'YOUR_EXISTING_FILE.xlsx' with your file name\n    } catch (error) {\n      console.error('Error appending data to the file:', error);\n    }\n\n    navigate(\"/confirmation\");\n  };\n\n  return (\n    <>\n      <Header />\n      <form className=\"lof-blue\" onSubmit={handleSubmit}>\n        {/* ... your existing form code */}\n        {/* ... rest of your form fields */}\n        <button type=\"submit\" className=\"btn lof-red text-white border-white rounded-tr-xl rounded-none mb-20 h-16 w-1/4 \">Submit</button>\n      </form>\n    </>\n  );\n}\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}